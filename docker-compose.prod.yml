<<<<<<< HEAD
# docker-compose.prod.yml
version: '3.8'

services:
  patient-data-api:
    image: your-dockerhub-username/patient-data-collection:latest
    container_name: patient-data-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com
    volumes:
      - patient_data:/app/data
      - patient_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  nginx:
    image: nginx:alpine
    container_name: patient-data-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - patient-data-api
    restart: unless-stopped

volumes:
  patient_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/patient-data/production
  patient_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/patient-data/logs
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/patient-data/nginx-logs

networks:
  patient-data-network:
    driver: bridge
    attachable: true

network_mode: patient-data-network

secrets:
  patient-data-secret:
    file: ./secrets/patient-data-secret.txt
    external: true
=======
# docker-compose.prod.yml
version: '3.8'

services:
  patient-data-api:
    image: your-dockerhub-username/patient-data-collection:latest
    container_name: patient-data-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com
    volumes:
      - patient_data:/app/data
      - patient_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  nginx:
    image: nginx:alpine
    container_name: patient-data-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - patient-data-api
    restart: unless-stopped

volumes:
  patient_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/patient-data/production
  patient_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/patient-data/logs
  nginx_logs:
    driver: local
>>>>>>> 08d4de7715cfb06336d339f873b0d46f214d59e2
